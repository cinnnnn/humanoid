import os
import sys
import time
import threading
from Queue import Queue
from datetime import datetime

import jtrace.app
import jtrace.util

sn = sys.argv[1]
pkg = sys.argv[2]
out_file = sys.argv[3]

queue_for_traces = Queue()
queue_for_progress = Queue()

jtrace_apps = []
traced_pids = set()

def monitor():
    while True:
        pkg_pids = jtrace.util.find_pids_for_pkgs(sn, [pkg])
        if pkg in pkg_pids:
            pids = pkg_pids[pkg]
            for pid in pids:
                if pid in traced_pids:
                    continue
                print "found", pkg, pid
                jtrace_app = jtrace.app.App({pkg: "NULL"}, queue_for_traces, queue_for_progress)
                jtrace_app.do_trace(sn=sn, ver="", pid=pid, pkg=pkg)
                jtrace_apps.append(jtrace_app)
                traced_pids.add(pid)
                print pkg, pid, "done"
        print "waiting for new pid"
        time.sleep(1)

def process_event():
    while True:
        hit = queue_for_traces.get()
        os.system("echo '%s %s %s' >> %s" %
                  (datetime.now().strftime("%Y-%m-%d_%H%M%S"),
                   hit[5], hit[6], out_file))

mt = threading.Thread(target=monitor)
pt = threading.Thread(target=process_event)
mt.start()
pt.start()
mt.join()
pt.join()
